#!/usr/bin/env node

'use strict'

const debug = require('debug')('microlink-cdn')
const querystring = require('querystring')
const { reduce } = require('lodash')
const download = require('download')
const pAll = require('p-all')
const fs = require('fs-extra')

const ENDPOINT = 'https://meta.microlink.io'

const TEXT = {
  sdk: 'Microlink SDK',
  cdn: 'Microlink CDN',
  api: 'Microlink API',
  mql: 'Microlink Query Language',
  chat: 'Microlink Chat',
  docs: 'Microlink Docs'
}

const FILE_TYPES = ['png', 'jpeg']

const downloadFile = async (url, dist) => {
  await fs.ensureFile(dist)
  const data = await download(url)
  debug('writing', dist)
  await fs.writeFile(dist, data)
}

const downloadBanners = async () => {
  const downloadFiles = reduce(
    TEXT,
    (acc, text, name) => {
      const files = FILE_TYPES.map(fileType => {
        const queryParams = querystring.stringify({
          theme: 'light',
          md: '1',
          fontSize: '100px',
          images: 'https://svgur.com/i/CkA.svg'
        })

        const url = `${ENDPOINT}/${text}.${fileType}?${queryParams}`
        const dist = `dist/banner/${name}.${fileType}`
        return () => downloadFile(url, dist)
      })

      return acc.concat(files)
    },
    []
  )

  await pAll(downloadFiles, { concurrency: 2 })
}

const main = async () => {
  await downloadBanners()
}

main()
  .then(() => {
    process.exit()
  })
  .catch(err => {
    console.error(err)
    process.exit(1)
  })
